from typing import Any, Callable, Self

class RMap:
    def __init__(self, factory: Callable[[], Any] | None = None) -> None: ...
    def __new__(cls, factory: Callable[[], Any] | None = None) -> Self: ...
    async def set(self, key: str | int, value: Any) -> None: ...
    async def pop(self, key: str | int) -> None: ...
    async def get(self, key: str | int) -> Any | None: ...

class RCacheMap:
    def __init__(self) -> None: ...
    def __new__(cls) -> Self: ...
    async def set(self, key: str | int, value: Any, ttl: float) -> None: ...
    async def pop(self, key: str | int) -> None: ...
    async def get(self, key: str | int) -> Any | None: ...
    async def pop_expired(self) -> None: ...
